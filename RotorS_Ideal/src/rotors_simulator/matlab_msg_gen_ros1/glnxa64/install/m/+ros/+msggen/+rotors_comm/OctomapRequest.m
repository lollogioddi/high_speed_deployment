
classdef OctomapRequest < ros.Message
    %OctomapRequest MATLAB implementation of rotors_comm/OctomapRequest
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.
    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'rotors_comm/OctomapRequest' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '75da936d054df9de7938d7041a8a6ef2' % The MD5 Checksum of the message definition
        PropertyList = { 'BoundingBoxOrigin' 'BoundingBoxLengths' 'LeafSize' 'PublishOctomap' 'Filename' } % List of non-constant message properties
        ROSPropertyList = { 'bounding_box_origin' 'bounding_box_lengths' 'leaf_size' 'publish_octomap' 'filename' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.geometry_msgs.Point' ...
            'ros.msggen.geometry_msgs.Point' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        BoundingBoxOrigin
        BoundingBoxLengths
        LeafSize
        PublishOctomap
        Filename
    end
    methods
        function set.BoundingBoxOrigin(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Point'};
            validateattributes(val, validClasses, validAttributes, 'OctomapRequest', 'BoundingBoxOrigin')
            obj.BoundingBoxOrigin = val;
        end
        function set.BoundingBoxLengths(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Point'};
            validateattributes(val, validClasses, validAttributes, 'OctomapRequest', 'BoundingBoxLengths')
            obj.BoundingBoxLengths = val;
        end
        function set.LeafSize(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'OctomapRequest', 'LeafSize');
            obj.LeafSize = double(val);
        end
        function set.PublishOctomap(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'OctomapRequest', 'PublishOctomap');
            obj.PublishOctomap = logical(val);
        end
        function set.Filename(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'OctomapRequest', 'Filename');
            obj.Filename = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.rotors_comm.OctomapRequest.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.rotors_comm.OctomapRequest(strObj);
        end
    end
end
